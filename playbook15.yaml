---
- name: Error handling
  hosts: futurama
  vars:
          oses: ['Debian', 'RedHat']

  tasks:
          - name: prechecking
            block:
                    - name: Activate the fail module when not redhat or debian
                      fail:
                              msg: The system does not appear to be a RH or Debian system
                      when: ansible_os_family not in oses

                    - name: Set a fact - SUCCESS
                      set_fact:
                              result: SUCCESS

                              # - name: This task always tests as "false"
                              #  shell: "/bin/false" # only activate a line like this when you want to force a failure

            rescue:
                    - name: Set a fact - FAILED
                      set_fact:
                              result: FAILED

                    - name: Exit the playbook
                      fail:
                              msg: PRECHECKING PHASE FAILED! EXITING PLAYBOOK.

            always:
                    - name: Write a log entry
                      lineinfile:
                              path: ~/errorhandling.log
                              line: "{{ ansible_date_time.epoch }} - Ended precheck phase - {{ inventory_hostname }} - {{ result }}"
                      delegate_to: localhost

          - name: maintenance
            block:
                    - name: Attempt to install some apps with apt
                      apt:
                              name: [bastet, sl, ninvaders]
                              state: present
                      become: yes
                      when: ansible_os_family == 'Debian'

                    - name: Attempt to install some apps with yum
                      yum:
                              name: [sl, moon-buggy]
                              state: present
                      become: yes
                      when: ansible_os_family == "RedHat"

                    - name: finished maintenance
                      set_fact:
                              result: SUCCESS

            rescue:
                    - name: Attempt to rollback some apps with apt
                      apt:
                              name: [bastet, sl, ninvaders]
                              state: absent
                      become: yes
                      when: ansible_os_family == 'Debian'

                    - name: Attempt to rollback some apps with yum
                      yum:
                              name: [sl, moon-buggy]
                              state: absent
                      become: yes
                      when: ansible_os_family == "RedHat"

                    - name: finished maintenance rollback
                      set_fact:
                              result: FAILED

                    - name: maintenance phase FAILED
                      fail:
                              msg: "MAINTENANCE FAILED! {{ inventory_hostname }}  Rollback complete. Exiting playbook."

            always:
                    - name: Write a log entry
                      lineinfile:
                              path: ~/errorhandling.log
                              line: "{{ ansible_date_time.epoch }} - Ended maintenance phase - {{ inventory_hostname }} - {{ result }}"
                      delegate_to: localhost
